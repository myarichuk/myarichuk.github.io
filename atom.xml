<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Graymatter Developer</title>
  
  <subtitle>Hi! My name is Michael. Sometimes, I write code :)</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.graymatterdeveloper.com/"/>
  <updated>2023-02-19T12:14:45.413Z</updated>
  <id>https://www.graymatterdeveloper.com/</id>
  
  <author>
    <name>Michael Yarichuk</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>From Inheritance Hell to Component Heaven, ECS Pattern</title>
    <link href="https://www.graymatterdeveloper.com/2023/02/19/ecs-intro/"/>
    <id>https://www.graymatterdeveloper.com/2023/02/19/ecs-intro/</id>
    <published>2023-02-19T12:14:45.413Z</published>
    <updated>2023-02-19T12:14:45.413Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;All-you-need-is-love-and-Object-Oriented-right-Right&quot;&gt;&lt;a href=&quot;#All-you-need-is-love-and-Object-Oriented-right-Right&quot;
        
      
    
    </summary>
    
    
      <category term="Programming" scheme="https://www.graymatterdeveloper.com/categories/Programming/"/>
    
      <category term="Design Patterns" scheme="https://www.graymatterdeveloper.com/categories/Programming/Design-Patterns/"/>
    
    
      <category term="C#" scheme="https://www.graymatterdeveloper.com/tags/C/"/>
    
      <category term="Programming" scheme="https://www.graymatterdeveloper.com/tags/Programming/"/>
    
      <category term="Entity Component System" scheme="https://www.graymatterdeveloper.com/tags/Entity-Component-System/"/>
    
      <category term="Design Patterns" scheme="https://www.graymatterdeveloper.com/tags/Design-Patterns/"/>
    
  </entry>
  
  <entry>
    <title>NancyFx vs. FeatherHttp</title>
    <link href="https://www.graymatterdeveloper.com/2020/04/25/nancyfx-vs-featherhttp/"/>
    <id>https://www.graymatterdeveloper.com/2020/04/25/nancyfx-vs-featherhttp/</id>
    <published>2020-04-25T09:28:54.000Z</published>
    <updated>2020-04-25T09:28:54.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;As a long time fan of the lightweight syntax of the awesome &lt;a href=&quot;http://nancyfx.org/&quot;&gt;NancyFx web framework&lt;/a&gt;, I was really
        
      
    
    </summary>
    
    
      <category term="Programming" scheme="https://www.graymatterdeveloper.com/categories/Programming/"/>
    
    
      <category term="C#" scheme="https://www.graymatterdeveloper.com/tags/C/"/>
    
      <category term="Performance" scheme="https://www.graymatterdeveloper.com/tags/Performance/"/>
    
      <category term="Programming" scheme="https://www.graymatterdeveloper.com/tags/Programming/"/>
    
      <category term="REST" scheme="https://www.graymatterdeveloper.com/tags/REST/"/>
    
      <category term="Framework" scheme="https://www.graymatterdeveloper.com/tags/Framework/"/>
    
  </entry>
  
  <entry>
    <title>More efficient string concatenation with string.Create()</title>
    <link href="https://www.graymatterdeveloper.com/2020/04/09/fun-string-create/"/>
    <id>https://www.graymatterdeveloper.com/2020/04/09/fun-string-create/</id>
    <published>2020-04-09T22:17:31.000Z</published>
    <updated>2020-04-09T22:17:31.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Strings are immutable in C#, this is a common knowledge. Unless you use pointers in unsafe blocks, that is.  Apparently, there is
        
      
    
    </summary>
    
    
      <category term="Programming" scheme="https://www.graymatterdeveloper.com/categories/Programming/"/>
    
    
      <category term="C#" scheme="https://www.graymatterdeveloper.com/tags/C/"/>
    
      <category term="Performance" scheme="https://www.graymatterdeveloper.com/tags/Performance/"/>
    
      <category term="Optimization" scheme="https://www.graymatterdeveloper.com/tags/Optimization/"/>
    
  </entry>
  
  <entry>
    <title>Reasons for C# inlining are (a bit) more complex than you think.</title>
    <link href="https://www.graymatterdeveloper.com/2020/03/07/csharp-inlining-rules/"/>
    <id>https://www.graymatterdeveloper.com/2020/03/07/csharp-inlining-rules/</id>
    <published>2020-03-07T15:37:36.000Z</published>
    <updated>2020-03-07T15:37:36.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;The Twitter sometimes can serve as a place of unexpected insights and very interesting technical questions! For example, the question
        
      
    
    </summary>
    
    
      <category term="Programming" scheme="https://www.graymatterdeveloper.com/categories/Programming/"/>
    
    
      <category term="C#" scheme="https://www.graymatterdeveloper.com/tags/C/"/>
    
      <category term="Optimization" scheme="https://www.graymatterdeveloper.com/tags/Optimization/"/>
    
  </entry>
  
  <entry>
    <title>Local variables vs properties. No suprises here?</title>
    <link href="https://www.graymatterdeveloper.com/2020/03/03/localvar-vs-property/"/>
    <id>https://www.graymatterdeveloper.com/2020/03/03/localvar-vs-property/</id>
    <published>2020-03-03T18:02:14.000Z</published>
    <updated>2020-03-03T18:02:14.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Can the benchmark that compares array iteration vs. pointer based iteration be optimized further? Yep!&lt;br&gt;In a post I wrote earlier
        
      
    
    </summary>
    
    
      <category term="Programming" scheme="https://www.graymatterdeveloper.com/categories/Programming/"/>
    
      <category term="C++" scheme="https://www.graymatterdeveloper.com/categories/Programming/C/"/>
    
    
      <category term="C#" scheme="https://www.graymatterdeveloper.com/tags/C/"/>
    
      <category term="Performance" scheme="https://www.graymatterdeveloper.com/tags/Performance/"/>
    
      <category term="Optimization" scheme="https://www.graymatterdeveloper.com/tags/Optimization/"/>
    
      <category term="C++" scheme="https://www.graymatterdeveloper.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Is it faster to access arrays with pointer arithmetics?</title>
    <link href="https://www.graymatterdeveloper.com/2020/02/23/arrays-vs-pointers/"/>
    <id>https://www.graymatterdeveloper.com/2020/02/23/arrays-vs-pointers/</id>
    <published>2020-02-23T06:39:23.000Z</published>
    <updated>2020-02-23T06:39:23.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;After seeing the results of my &lt;a href=&quot;/2020/02/17/data-locality/&quot;&gt;previous post&lt;/a&gt; where I tested performance impact of data
        
      
    
    </summary>
    
    
      <category term="Programming" scheme="https://www.graymatterdeveloper.com/categories/Programming/"/>
    
    
      <category term="C#" scheme="https://www.graymatterdeveloper.com/tags/C/"/>
    
      <category term="Performance" scheme="https://www.graymatterdeveloper.com/tags/Performance/"/>
    
      <category term="Optimization" scheme="https://www.graymatterdeveloper.com/tags/Optimization/"/>
    
  </entry>
  
  <entry>
    <title>Easy way to configure SOS in LLDB</title>
    <link href="https://www.graymatterdeveloper.com/2020/02/18/lldb-convenient-sos/"/>
    <id>https://www.graymatterdeveloper.com/2020/02/18/lldb-convenient-sos/</id>
    <published>2020-02-18T18:48:13.000Z</published>
    <updated>2020-02-18T18:48:13.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;I don’t have much experience in using &lt;a href=&quot;https://lldb.llvm.org/&quot;&gt;LLDB&lt;/a&gt; to debug .Net Core, so when I stumbled upon this little
        
      
    
    </summary>
    
    
      <category term="Debugging" scheme="https://www.graymatterdeveloper.com/categories/Debugging/"/>
    
      <category term="Post-mortem" scheme="https://www.graymatterdeveloper.com/categories/Debugging/Post-mortem/"/>
    
    
      <category term="C#" scheme="https://www.graymatterdeveloper.com/tags/C/"/>
    
      <category term="Debugging" scheme="https://www.graymatterdeveloper.com/tags/Debugging/"/>
    
      <category term="LLDB" scheme="https://www.graymatterdeveloper.com/tags/LLDB/"/>
    
      <category term="Linux" scheme="https://www.graymatterdeveloper.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Sequential memory access is... faster?</title>
    <link href="https://www.graymatterdeveloper.com/2020/02/17/data-locality/"/>
    <id>https://www.graymatterdeveloper.com/2020/02/17/data-locality/</id>
    <published>2020-02-17T17:31:11.000Z</published>
    <updated>2020-02-17T17:31:11.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;In gamedev articles about Entity-Component-System, data locality is often mentioned as a big reason to use such design pattern. The
        
      
    
    </summary>
    
    
      <category term="Programming" scheme="https://www.graymatterdeveloper.com/categories/Programming/"/>
    
      <category term="C++" scheme="https://www.graymatterdeveloper.com/categories/Programming/C/"/>
    
    
      <category term="C#" scheme="https://www.graymatterdeveloper.com/tags/C/"/>
    
      <category term="Performance" scheme="https://www.graymatterdeveloper.com/tags/Performance/"/>
    
      <category term="Optimization" scheme="https://www.graymatterdeveloper.com/tags/Optimization/"/>
    
      <category term="C++" scheme="https://www.graymatterdeveloper.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Nice little gotcha when loading SOS after launching .Net executable</title>
    <link href="https://www.graymatterdeveloper.com/2020/02/14/windbg-launch-net-executable/"/>
    <id>https://www.graymatterdeveloper.com/2020/02/14/windbg-launch-net-executable/</id>
    <published>2020-02-14T17:55:15.000Z</published>
    <updated>2020-02-14T17:55:15.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;When you launch .Net executable with WinDBG, in order to “catch” something nasty like &lt;code&gt;AccessViolationExcetion&lt;/code&gt;, the
        
      
    
    </summary>
    
    
      <category term="Debugging" scheme="https://www.graymatterdeveloper.com/categories/Debugging/"/>
    
    
      <category term="Debugging" scheme="https://www.graymatterdeveloper.com/tags/Debugging/"/>
    
      <category term="WinDBG" scheme="https://www.graymatterdeveloper.com/tags/WinDBG/"/>
    
      <category term=".Net" scheme="https://www.graymatterdeveloper.com/tags/Net/"/>
    
      <category term="Gotcha" scheme="https://www.graymatterdeveloper.com/tags/Gotcha/"/>
    
  </entry>
  
  <entry>
    <title>Setting up WinDBG for analyzing memory dumps</title>
    <link href="https://www.graymatterdeveloper.com/2020/02/12/setting-up-windbg/"/>
    <id>https://www.graymatterdeveloper.com/2020/02/12/setting-up-windbg/</id>
    <published>2020-02-12T23:25:23.000Z</published>
    <updated>2020-02-12T23:25:23.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;When I needed to investigate a memory dump for a first time, I stared at WinDBG window, not knowing how to begin. My google-fu yielded
        
      
    
    </summary>
    
    
      <category term="Debugging" scheme="https://www.graymatterdeveloper.com/categories/Debugging/"/>
    
      <category term="Post-mortem" scheme="https://www.graymatterdeveloper.com/categories/Debugging/Post-mortem/"/>
    
    
      <category term="Debugging" scheme="https://www.graymatterdeveloper.com/tags/Debugging/"/>
    
      <category term="WinDBG" scheme="https://www.graymatterdeveloper.com/tags/WinDBG/"/>
    
      <category term=".Net" scheme="https://www.graymatterdeveloper.com/tags/Net/"/>
    
  </entry>
  
  <entry>
    <title>Segmentation faults when using P/Invoke = pointer issues? Not necessarily</title>
    <link href="https://www.graymatterdeveloper.com/2020/01/26/segment-faults-and-gdb/"/>
    <id>https://www.graymatterdeveloper.com/2020/01/26/segment-faults-and-gdb/</id>
    <published>2020-01-26T23:28:27.378Z</published>
    <updated>2020-01-26T23:28:27.378Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;When debugging new &lt;a href=&quot;https://ravendb.net/&quot;&gt;RavenDB’s&lt;/a&gt; 32-bit &lt;a href=&quot;https://en.wikipedia.org/wiki/Paging&quot;&gt;pager&lt;/a&gt; for
        
      
    
    </summary>
    
    
      <category term="Debugging" scheme="https://www.graymatterdeveloper.com/categories/Debugging/"/>
    
      <category term="Post-mortem" scheme="https://www.graymatterdeveloper.com/categories/Debugging/Post-mortem/"/>
    
    
      <category term="C#" scheme="https://www.graymatterdeveloper.com/tags/C/"/>
    
      <category term="Debugging" scheme="https://www.graymatterdeveloper.com/tags/Debugging/"/>
    
      <category term="Linux" scheme="https://www.graymatterdeveloper.com/tags/Linux/"/>
    
      <category term="Gdb" scheme="https://www.graymatterdeveloper.com/tags/Gdb/"/>
    
  </entry>
  
  <entry>
    <title>Hunter, C++ package management made easy</title>
    <link href="https://www.graymatterdeveloper.com/2020/01/01/hunter-cpp-package-manager/"/>
    <id>https://www.graymatterdeveloper.com/2020/01/01/hunter-cpp-package-manager/</id>
    <published>2020-01-01T14:35:18.677Z</published>
    <updated>2020-01-01T14:35:18.677Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;In a previous post, I detailed involved and frustrating process I needed to go through to compile OpenCV as part of my application. You
        
      
    
    </summary>
    
    
      <category term="Programming" scheme="https://www.graymatterdeveloper.com/categories/Programming/"/>
    
      <category term="C++" scheme="https://www.graymatterdeveloper.com/categories/Programming/C/"/>
    
    
      <category term="C++" scheme="https://www.graymatterdeveloper.com/tags/C/"/>
    
      <category term="CMake" scheme="https://www.graymatterdeveloper.com/tags/CMake/"/>
    
      <category term="Package Management" scheme="https://www.graymatterdeveloper.com/tags/Package-Management/"/>
    
      <category term="OpenCV" scheme="https://www.graymatterdeveloper.com/tags/OpenCV/"/>
    
  </entry>
  
  <entry>
    <title>OpenCV + Visual Studio + CMake = Adventure time</title>
    <link href="https://www.graymatterdeveloper.com/2019/12/25/opencv-and-cmake-in-cpp/"/>
    <id>https://www.graymatterdeveloper.com/2019/12/25/opencv-and-cmake-in-cpp/</id>
    <published>2019-12-25T21:57:38.448Z</published>
    <updated>2019-12-25T21:57:38.448Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;In theory, configuring a popular library like OpenCV in CMake should be easy. In practice, sadly, it is anything BUT easy. Why? Let me
        
      
    
    </summary>
    
    
      <category term="Programming" scheme="https://www.graymatterdeveloper.com/categories/Programming/"/>
    
      <category term="C++" scheme="https://www.graymatterdeveloper.com/categories/Programming/C/"/>
    
    
      <category term="C++" scheme="https://www.graymatterdeveloper.com/tags/C/"/>
    
      <category term="CMake" scheme="https://www.graymatterdeveloper.com/tags/CMake/"/>
    
      <category term="OpenCV" scheme="https://www.graymatterdeveloper.com/tags/OpenCV/"/>
    
  </entry>
  
  <entry>
    <title>Hello ANTLR (writing parsers is easier than you think!)</title>
    <link href="https://www.graymatterdeveloper.com/2019/12/25/writing-parsers-easier-than-you-think/"/>
    <id>https://www.graymatterdeveloper.com/2019/12/25/writing-parsers-easier-than-you-think/</id>
    <published>2019-12-25T08:21:44.000Z</published>
    <updated>2019-12-25T08:21:44.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;After playing around with the awesome ANTLR for a while (it is a &lt;a href=&quot;https://www.antlr.org/&quot;&gt;parser generator&lt;/a&gt;, in case you are
        
      
    
    </summary>
    
    
      <category term="Programming" scheme="https://www.graymatterdeveloper.com/categories/Programming/"/>
    
      <category term="Parsers" scheme="https://www.graymatterdeveloper.com/categories/Programming/Parsers/"/>
    
    
      <category term="ANTLR" scheme="https://www.graymatterdeveloper.com/tags/ANTLR/"/>
    
      <category term="C#" scheme="https://www.graymatterdeveloper.com/tags/C/"/>
    
      <category term="Parsers" scheme="https://www.graymatterdeveloper.com/tags/Parsers/"/>
    
  </entry>
  
  <entry>
    <title>Even simple stuff, like C# TPL can surprise you!</title>
    <link href="https://www.graymatterdeveloper.com/2019/12/17/rarely-used-task-continuation/"/>
    <id>https://www.graymatterdeveloper.com/2019/12/17/rarely-used-task-continuation/</id>
    <published>2019-12-17T20:27:10.288Z</published>
    <updated>2019-12-17T20:27:10.288Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;What do you think would happen if you run this code? Can you guess &lt;em&gt;without&lt;/em&gt; actually running it?&lt;br&gt;Now try running it and see
        
      
    
    </summary>
    
    
      <category term="Programming" scheme="https://www.graymatterdeveloper.com/categories/Programming/"/>
    
      <category term="WTF" scheme="https://www.graymatterdeveloper.com/categories/Programming/WTF/"/>
    
    
      <category term="C#" scheme="https://www.graymatterdeveloper.com/tags/C/"/>
    
      <category term="WTF" scheme="https://www.graymatterdeveloper.com/tags/WTF/"/>
    
      <category term="Debugging" scheme="https://www.graymatterdeveloper.com/tags/Debugging/"/>
    
      <category term="TPL" scheme="https://www.graymatterdeveloper.com/tags/TPL/"/>
    
  </entry>
  
  <entry>
    <title>Yet Another (Cryptic) CMake Error</title>
    <link href="https://www.graymatterdeveloper.com/2019/12/17/cryptic-cmake-errors/"/>
    <id>https://www.graymatterdeveloper.com/2019/12/17/cryptic-cmake-errors/</id>
    <published>2019-12-17T19:19:41.567Z</published>
    <updated>2019-12-17T19:19:41.567Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;I like CMake. I really do. But sometimes… it is frustrating.&lt;br&gt;The samples found online are understandable and easy to follow and
        
      
    
    </summary>
    
    
      <category term="Programming" scheme="https://www.graymatterdeveloper.com/categories/Programming/"/>
    
      <category term="C++" scheme="https://www.graymatterdeveloper.com/categories/Programming/C/"/>
    
      <category term="WTF" scheme="https://www.graymatterdeveloper.com/categories/Programming/C/WTF/"/>
    
    
      <category term="C++" scheme="https://www.graymatterdeveloper.com/tags/C/"/>
    
      <category term="CMake" scheme="https://www.graymatterdeveloper.com/tags/CMake/"/>
    
      <category term="WTF" scheme="https://www.graymatterdeveloper.com/tags/WTF/"/>
    
  </entry>
  
  <entry>
    <title>Adventures of a C# dev in C++ land - dependency injection</title>
    <link href="https://www.graymatterdeveloper.com/2019/12/07/cpp-di-metaprogramming/"/>
    <id>https://www.graymatterdeveloper.com/2019/12/07/cpp-di-metaprogramming/</id>
    <published>2019-12-07T01:15:48.000Z</published>
    <updated>2019-12-07T01:15:48.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;I stumbled upon &lt;a href=&quot;https://boost-experimental.github.io/di/index.html&quot;&gt;Boost.DI&lt;/a&gt; by accident and was instantly intrigued: for a
        
      
    
    </summary>
    
    
      <category term="Programming" scheme="https://www.graymatterdeveloper.com/categories/Programming/"/>
    
      <category term="C++" scheme="https://www.graymatterdeveloper.com/categories/Programming/C/"/>
    
    
      <category term="Programming" scheme="https://www.graymatterdeveloper.com/tags/Programming/"/>
    
      <category term="C++" scheme="https://www.graymatterdeveloper.com/tags/C/"/>
    
      <category term="IOC/DI" scheme="https://www.graymatterdeveloper.com/tags/IOC-DI/"/>
    
      <category term="C++ Templates" scheme="https://www.graymatterdeveloper.com/tags/C-Templates/"/>
    
  </entry>
  
  <entry>
    <title>Synchronization primitives + async/await = trouble</title>
    <link href="https://www.graymatterdeveloper.com/2019/12/05/async-sync/"/>
    <id>https://www.graymatterdeveloper.com/2019/12/05/async-sync/</id>
    <published>2019-12-05T08:38:06.000Z</published>
    <updated>2019-12-05T08:38:06.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Recently, my colleague was investigating an interesting issue. A &lt;code&gt;ReaderWriterLockSlim&lt;/code&gt; was sometimes throwing the following
        
      
    
    </summary>
    
    
      <category term="Programming" scheme="https://www.graymatterdeveloper.com/categories/Programming/"/>
    
      <category term="Debugging" scheme="https://www.graymatterdeveloper.com/categories/Programming/Debugging/"/>
    
    
      <category term="C#" scheme="https://www.graymatterdeveloper.com/tags/C/"/>
    
      <category term="Async" scheme="https://www.graymatterdeveloper.com/tags/Async/"/>
    
      <category term="Programming" scheme="https://www.graymatterdeveloper.com/tags/Programming/"/>
    
      <category term="Multithreading" scheme="https://www.graymatterdeveloper.com/tags/Multithreading/"/>
    
  </entry>
  
  <entry>
    <title>Listening to data changes in PostgreSQL and C#</title>
    <link href="https://www.graymatterdeveloper.com/2019/12/02/listening-events-postgresql/"/>
    <id>https://www.graymatterdeveloper.com/2019/12/02/listening-events-postgresql/</id>
    <published>2019-12-02T09:23:25.000Z</published>
    <updated>2019-12-02T09:23:25.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;To-poll-or-not-to-poll&quot;&gt;&lt;a href=&quot;#To-poll-or-not-to-poll&quot; class=&quot;headerlink&quot; title=&quot;To poll or not to poll?&quot;&gt;&lt;/a&gt;To poll or not to
        
      
    
    </summary>
    
    
      <category term="Programming" scheme="https://www.graymatterdeveloper.com/categories/Programming/"/>
    
      <category term="Databases" scheme="https://www.graymatterdeveloper.com/categories/Programming/Databases/"/>
    
    
      <category term="C#" scheme="https://www.graymatterdeveloper.com/tags/C/"/>
    
      <category term="PostgreSQL" scheme="https://www.graymatterdeveloper.com/tags/PostgreSQL/"/>
    
      <category term="SQL" scheme="https://www.graymatterdeveloper.com/tags/SQL/"/>
    
      <category term="Event-handling" scheme="https://www.graymatterdeveloper.com/tags/Event-handling/"/>
    
  </entry>
  
  <entry>
    <title>Hello World with multiple microservices</title>
    <link href="https://www.graymatterdeveloper.com/2019/11/28/hello-world-microservices/"/>
    <id>https://www.graymatterdeveloper.com/2019/11/28/hello-world-microservices/</id>
    <published>2019-11-28T10:21:23.000Z</published>
    <updated>2019-11-28T10:21:23.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;A friend of mine was having trouble finding simple but working example of microservices that he could tinker with, finding instead
        
      
    
    </summary>
    
    
      <category term="Programming" scheme="https://www.graymatterdeveloper.com/categories/Programming/"/>
    
      <category term="Architecture" scheme="https://www.graymatterdeveloper.com/categories/Programming/Architecture/"/>
    
    
      <category term="C#" scheme="https://www.graymatterdeveloper.com/tags/C/"/>
    
      <category term="Programming" scheme="https://www.graymatterdeveloper.com/tags/Programming/"/>
    
      <category term="MassTransit" scheme="https://www.graymatterdeveloper.com/tags/MassTransit/"/>
    
      <category term="Microservices" scheme="https://www.graymatterdeveloper.com/tags/Microservices/"/>
    
      <category term="Architecture" scheme="https://www.graymatterdeveloper.com/tags/Architecture/"/>
    
  </entry>
  
</feed>
